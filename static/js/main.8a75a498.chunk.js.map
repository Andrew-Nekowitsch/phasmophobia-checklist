{"version":3,"sources":["components/Icon.js","redux/actions.js","components/Controller.js","components/Reset.js","components/GhostTableHead.js","components/Table.js","redux/reducers.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["Icons","props","React","useEffect","node","loadCSS","document","querySelector","parentNode","removeChild","Icon","className","name","NEGATIVE","POSITIVE","RESET","Controller","handleCheckmark","dispatch","type","clue","column","handleXmark","checkStyle","xStyle","emptyStyle","checkColor","clueList","xColor","IconButton","onClick","this","style","color","padding","Component","connect","state","Reset","handleReset","Button","GhostTableHead","TableHead","TableRow","TableCell","align","GhostTable","useStyles","makeStyles","table","minWidth","darkBackgroundColor","backgroundColor","rowStyler","row","active","count","clueCount","cellStyler","classes","TableContainer","component","Paper","Table","aria-label","TableBody","rows","map","scope","emf","orb","writing","temps","box","finger","id","ghostData","STATE","COLUMNS","INITIALSTATE","clueCounter","table_ghostData","row_ghostData","counter","columnIndex","indexOf","ghostSort","firstRow","secondRow","reducer","action","countModifier","sort","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","prefersDarkMode","useMediaQuery","theme","useMemo","createMuiTheme","palette","ThemeProvider","text","primary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a75a498.chunk.js","sourcesContent":["import React from 'react';\r\nimport { loadCSS } from 'fg-loadcss';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nexport default function Icons(props) {\r\n\r\n  React.useEffect(() => {\r\n    const node = loadCSS(\r\n      'https://use.fontawesome.com/releases/v5.12.0/css/all.css',\r\n      document.querySelector('#font-awesome-css'),\r\n    );\r\n\r\n    return () => {\r\n      node.parentNode.removeChild(node);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n  <div>\r\n    <Icon className={props.name} />\r\n  </div>\r\n  );\r\n}","export const NEGATIVE = 'NEGATIVE';\r\nexport const POSITIVE = 'POSITIVE';\r\nexport const RESET = 'RESET';","import React, { Component } from 'react';\r\nimport FaIcon from \"./Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { connect } from 'react-redux';\r\nimport { POSITIVE, NEGATIVE } from \"../redux/actions\";\r\n\r\nclass Controller extends Component {\r\n\r\n  handleCheckmark = () => {\r\n    this.props.dispatch({ type: POSITIVE, clue: this.props.column });\r\n  };\r\n\r\n  handleXmark = () => {\r\n    this.props.dispatch({ type: NEGATIVE, clue: this.props.column });\r\n  };\r\n\r\n  checkStyle = '#009926'\r\n  xStyle = '#f44336'\r\n  emptyStyle = ''\r\n  checkColor = () => {\r\n    return this.props.clueList[this.props.column] === 1 ? this.checkStyle : this.emptyStyle\r\n  }\r\n  xColor = () => {\r\n    return this.props.clueList[this.props.column] === 2 ? this.xStyle : this.emptyStyle\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <IconButton onClick={this.handleCheckmark} style={{color: this.checkColor(), padding: \"0px\" }}>\r\n          <FaIcon name=\"fas fa-check\" />\r\n        </IconButton>\r\n        <IconButton onClick={this.handleXmark} style={{color: this.xColor(), padding: \"0px\" }}>\r\n          <FaIcon name=\"fas fa-times\" />\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    clueList: state.clueList\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Controller);\r\n","\r\nimport { connect } from 'react-redux';\r\nimport { RESET } from \"../redux/actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { Component } from 'react';\r\n\r\nclass Reset extends Component {\r\n\r\n    handleReset = () => {\r\n        this.props.dispatch({ type: RESET, clue: this.props.column });\r\n      };\r\n      \r\n    render(){\r\n        return (\r\n            <Button onClick={this.handleReset}><strong>Reset</strong></Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Reset);\r\n","import React, { Component } from 'react';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Controller from './Controller'\r\nimport { connect } from 'react-redux';\r\nimport Reset from './Reset'\r\n\r\nclass GhostTableHead extends Component {\r\n    render() {\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell align=\"center\">EMF Level 5</TableCell>\r\n                    <TableCell align=\"center\">Ghost Orbs</TableCell>\r\n                    <TableCell align=\"center\">Ghost Writing</TableCell>\r\n                    <TableCell align=\"center\">Freezing Temps</TableCell>\r\n                    <TableCell align=\"center\">Spirit Box</TableCell>\r\n                    <TableCell align=\"center\">Fingerprints</TableCell>\r\n                </TableRow>\r\n                <TableRow style={{ padding: '0px' }}>\r\n                    <TableCell align=\"right\"><Reset /></TableCell>\r\n                    <TableCell align=\"center\"><Controller column={0} /></TableCell>\r\n                    <TableCell align=\"center\"><Controller column={1} /></TableCell>\r\n                    <TableCell align=\"center\"><Controller column={2} /></TableCell>\r\n                    <TableCell align=\"center\"><Controller column={3} /></TableCell>\r\n                    <TableCell align=\"center\"><Controller column={4} /></TableCell>\r\n                    <TableCell align=\"center\"><Controller column={5} /></TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(GhostTableHead);\r\n\r\n","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkmark from './Icon'\r\nimport GhostTableHead from './GhostTableHead'\r\nimport { connect } from 'react-redux';\r\n\r\nclass GhostTable extends Component {\r\n\r\n  useStyles = () => makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n  darkBackgroundColor = {\r\n    backgroundColor: '#303030'\r\n  }\r\n  emptyStyle = {\r\n  }\r\n  checkColor = {\r\n    color: '#009926'\r\n  }\r\n  xColor = {\r\n    color: '#f44336'\r\n  }\r\n\r\n  rowStyler = (row) => {\r\n    return (row.active === true && row.count === 3 && this.checkColor) ||\r\n    (row.active === true && row.count === this.props.clueCount ? this.emptyStyle : this.darkBackgroundColor )\r\n  }\r\n  cellStyler = (column) => {\r\n    return this.props.clueList[column] === 1 ? this.checkColor : \r\n    (this.props.clueList[column] === 2 ? this.xColor : this.emptyStyle)\r\n  }\r\n\r\n  classes = this.useStyles();\r\n\r\n  render() {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n          <Table className={this.classes.table} aria-label=\"simple table\">\r\n            <GhostTableHead/>\r\n            <TableBody>\r\n              {this.props.rows.map((row) => (\r\n                <TableRow key={row.id} style={this.rowStyler(row)}>\r\n                  <TableCell style={this.rowStyler(row)} component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                  <TableCell style={this.cellStyler(0)} align=\"center\">{row.emf ? <Checkmark name=\"fas fa-check\" /> : \"\"}</TableCell>\r\n                  <TableCell style={this.cellStyler(1)} align=\"center\">{row.orb ? <Checkmark name=\"fas fa-check\" /> : \"\"}</TableCell>\r\n                  <TableCell style={this.cellStyler(2)} align=\"center\">{row.writing ? <Checkmark name=\"fas fa-check\" /> : \"\"}</TableCell>\r\n                  <TableCell style={this.cellStyler(3)} align=\"center\">{row.temps ? <Checkmark name=\"fas fa-check\" /> : \"\"}</TableCell>\r\n                  <TableCell style={this.cellStyler(4)} align=\"center\">{row.box ? <Checkmark name=\"fas fa-check\" /> : \"\"}</TableCell>\r\n                  <TableCell style={this.cellStyler(5)} align=\"center\">{row.finger ? <Checkmark name=\"fas fa-check\" /> : \"\"}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.ghostData,\r\n    clueCount: state.clueCount,\r\n    clueList: state.clueList\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GhostTable);","import { RESET, POSITIVE, NEGATIVE } from \"./actions\";\r\nconst STATE = [0, 1, 2];\r\nconst COLUMNS = [\"emf\", \"orb\", \"writing\", \"temps\", \"box\", \"finger\"];\r\nconst INITIALSTATE = {\r\n  clueList: [0, 0, 0, 0, 0, 0],\r\n  clueCount: 0,\r\n  ghostData: [\r\n    {\r\n      name: \"Shade\",\r\n      emf: true,\r\n      orb: true,\r\n      writing: true,\r\n      temps: false,\r\n      box: false,\r\n      finger: false,\r\n      count: 0,\r\n      active: true,\r\n      id: 0,\r\n    },\r\n    {\r\n      name: \"Phantom\",\r\n      emf: true,\r\n      orb: true,\r\n      writing: false,\r\n      temps: true,\r\n      box: false,\r\n      finger: false,\r\n      count: 0,\r\n      active: true,\r\n      id: 1,\r\n    },\r\n    {\r\n      name: \"Jinn\",\r\n      emf: true,\r\n      orb: true,\r\n      writing: false,\r\n      temps: false,\r\n      box: true,\r\n      finger: false,\r\n      count: 0,\r\n      active: true,\r\n      id: 2,\r\n    },\r\n    {\r\n      name: \"Revenant\",\r\n      emf: true,\r\n      orb: false,\r\n      writing: true,\r\n      temps: false,\r\n      box: false,\r\n      finger: true,\r\n      count: 0,\r\n      active: true,\r\n      id: 3,\r\n    },\r\n    {\r\n      name: \"Oni\",\r\n      emf: true,\r\n      orb: false,\r\n      writing: true,\r\n      temps: false,\r\n      box: true,\r\n      finger: false,\r\n      count: 0,\r\n      active: true,\r\n      id: 4,\r\n    },\r\n    {\r\n      name: \"Banshee\",\r\n      emf: true,\r\n      orb: false,\r\n      writing: false,\r\n      temps: true,\r\n      box: false,\r\n      finger: true,\r\n      count: 0,\r\n      active: true,\r\n      id: 5,\r\n    },\r\n    {\r\n      name: \"Yurei\",\r\n      emf: false,\r\n      orb: true,\r\n      writing: true,\r\n      temps: true,\r\n      box: false,\r\n      finger: false,\r\n      count: 0,\r\n      active: true,\r\n      id: 6,\r\n    },\r\n    {\r\n      name: \"Mare\",\r\n      emf: false,\r\n      orb: true,\r\n      writing: false,\r\n      temps: true,\r\n      box: true,\r\n      finger: false,\r\n      count: 0,\r\n      active: true,\r\n      id: 7,\r\n    },\r\n    {\r\n      name: \"Poltergeist\",\r\n      emf: false,\r\n      orb: true,\r\n      writing: false,\r\n      temps: false,\r\n      box: true,\r\n      finger: true,\r\n      count: 0,\r\n      active: true,\r\n      id: 8,\r\n    },\r\n    {\r\n      name: \"Demon\",\r\n      emf: false,\r\n      orb: false,\r\n      writing: true,\r\n      temps: true,\r\n      box: true,\r\n      finger: false,\r\n      count: 0,\r\n      active: true,\r\n      id: 9,\r\n    },\r\n    {\r\n      name: \"Spirit\",\r\n      emf: false,\r\n      orb: false,\r\n      writing: true,\r\n      temps: false,\r\n      box: true,\r\n      finger: true,\r\n      count: 0,\r\n      active: true,\r\n      id: 10,\r\n    },\r\n    {\r\n      name: \"Wraith\",\r\n      emf: false,\r\n      orb: false,\r\n      writing: false,\r\n      temps: true,\r\n      box: true,\r\n      finger: true,\r\n      count: 0,\r\n      active: true,\r\n      id: 11,\r\n    },\r\n  ],\r\n};\r\n\r\nfunction clueCounter(clueList, table_ghostData) {\r\n  for (let row_ghostData of table_ghostData) {\r\n    let counter = 0;\r\n    row_ghostData.active = true;\r\n    for (const column of COLUMNS) {\r\n      let columnIndex = COLUMNS.indexOf(column);\r\n      if (row_ghostData[column] === true) {\r\n        if (clueList[columnIndex] === STATE[1]) {\r\n          counter++;\r\n        } else if (clueList[columnIndex] === STATE[2]) {\r\n          row_ghostData.active = false;\r\n        }\r\n      }\r\n    }\r\n    row_ghostData.count = counter;\r\n  }\r\n  return table_ghostData;\r\n}\r\n\r\nfunction ghostSort(firstRow, secondRow) {\r\n  const firstThenSecond = -1,\r\n    secondThenFirst = 1,\r\n    sameOrder = 0;\r\n  if (firstRow.active === secondRow.active) {\r\n    return (\r\n      (firstRow.count > secondRow.count && firstThenSecond) ||\r\n      (firstRow.count < secondRow.count && secondThenFirst) ||\r\n      (firstRow.count === secondRow.count &&\r\n        (firstRow.id < secondRow.id ? firstThenSecond : secondThenFirst))\r\n    );\r\n  }\r\n\r\n  if (firstRow.active !== secondRow.active) {\r\n    return (!firstRow.active && secondThenFirst) || firstThenSecond;\r\n  }\r\n  return sameOrder;\r\n}\r\n\r\nfunction reducer(state = INITIALSTATE, action) {\r\n  var countModifier = 0;\r\n\r\n  switch (action.type) {\r\n    case RESET:\r\n      for (var row of state.ghostData) {\r\n        row.count = 0;\r\n        row.active = true;\r\n      }\r\n      return {\r\n        clueList: [0, 0, 0, 0, 0, 0],\r\n        clueCount: 0,\r\n        ghostData: INITIALSTATE.ghostData.sort(ghostSort)\r\n      };\r\n    case POSITIVE:\r\n      // 👌 or ✖ -> ✔\r\n      if (state.clueList[action.clue] !== STATE[1]) {\r\n        if (state.clueCount >= 3) {\r\n          // found all 3 clues?\r\n          break;\r\n        }\r\n        state.clueList[action.clue] = STATE[1];\r\n        countModifier = +1;\r\n\r\n        // ✔ -> 👌\r\n      } else {\r\n        state.clueList[action.clue] = STATE[0];\r\n        countModifier = -1;\r\n      }\r\n      break;\r\n    case NEGATIVE:\r\n      // ✔ -> ✖\r\n      if (state.clueList[action.clue] === STATE[1]) {\r\n        countModifier = -1;\r\n        state.clueList[action.clue] = STATE[2];\r\n\r\n        // ✖ -> 👌\r\n      } else if (state.clueList[action.clue] === STATE[2]) {\r\n        state.clueList[action.clue] = STATE[0];\r\n\r\n        // 👌 -> ✖\r\n      } else {\r\n        state.clueList[action.clue] = STATE[2];\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return {\r\n    clueList: [...state.clueList],\r\n    clueCount: state.clueCount + countModifier,\r\n    ghostData: [\r\n      ...clueCounter(\r\n        state.clueList,\r\n        state.ghostData\r\n      ).sort(ghostSort),\r\n    ],\r\n  };\r\n}\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport default store;","import \"./App.css\";\r\nimport BasicTable from \"./components/Table\";\r\nimport React from \"react\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nfunction App() {\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: \"dark\",\r\n        },\r\n      }), // eslint-disable-next-line\r\n    [prefersDarkMode]\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <h1 style={{ color: theme.palette.text.primary }}>\r\n            Phasmophobia Checklist\r\n          </h1>\r\n          <BasicTable></BasicTable>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}